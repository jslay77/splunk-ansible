---
# Install splunk 
#
#
- name: Set server.conf configs (kvstore.disabled)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: kvstore
    option: disabled
    value: "{{ splunk_kvstore_disabled }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Set server.conf configs (general.serverName)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: general
    option: serverName
    value: "{{ splunk_role }}-{{ inventory_hostname }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Set server.conf configs (clustering.replication_factor)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: clustering
    option: replication_factor
    value: "{{ splunk_idx_clustering_replication_factor }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Set server.conf configs (clustering.search_factor)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: clustering
    option: search_factor
    value: "{{ splunk_idx_clustering_search_factor }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Set server.conf configs (clustering.mode)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: clustering
    option: mode
    value: "{{ splunk_idx_clustering_mode }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Check for existing pass4SymmKey and don't set it again.
  command: "cat {{ splunk_home }}/etc/system/local/server.conf"
  register: keyCheck
  become: true
  become_user: "{{ splunk_user }}"
  changed_when: false

- name: Set server.conf configs (clustering.pass4SymmKey)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: clustering
    option: pass4SymmKey
    value: "{{ splunk_idx_clustering_key }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  #when: keyCheck.stdout.find('pass4SymmKey') == -1
  no_log: true
  notify:
    - Restart Splunk

- name: Set server.conf configs (clustering.cluster_label)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf" 
    mode: 0650
    section: clustering
    option: cluster_label
    value: "{{ splunk_idx_clustering_label }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Set web.conf configs (settings.startwebserver)
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/web.conf" 
    mode: 0650
    section: settings
    option: startwebserver
    value: "{{splunk_web_enabled}}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Add master-apps
  unarchive: src=master-apps.tgz dest="{{ splunk_home }}/etc"
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Deploy bundle to cluster peers
  command: "{{ splunk_home }}/bin/splunk apply cluster-bundle --answer-yes -auth admin:{{ splunk_admin_pass }}"
  become: yes
  become_user: "{{ splunk_user }}"
  changed_when: false
  no_log: true

- name: Add outputs.conf
  template: src=outputs.conf dest="{{ splunk_home }}/etc/system/local/outputs.conf" mode=0660
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: Configure license slave
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/server.conf"
    section: license
    option: master_uri
    value: "{{ splunk_lm_uri }}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  when: (splunk_lm_uri is defined)

- name: Set web.conf configs (settings.mgmtHostPort))
  ini_file:
    path: "{{ splunk_home }}/etc/system/local/web.conf" 
    mode: 0650
    section: settings
    option: mgmtHostPort
    value: "0:{{splunkd_mgmt_port}}"
    backup: yes
  become: yes
  become_user: "{{ splunk_user }}"
  notify:
    - Restart Splunk

- name: re-read facts after adding custom fact
  setup: filter=ansible_local
  become: yes

- import_tasks: upgrade.yml
  when: ( splunk_version > ansible_local.splunk.cm.version )

- import_tasks: multisite.yml
  when: ( splunk_idx_clustering_multisite == true )
